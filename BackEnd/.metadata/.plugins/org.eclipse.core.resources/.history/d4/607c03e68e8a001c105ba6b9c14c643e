/**
 * 
 */
package com.demo.project.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.demo.project.entity.Riesgo;
import com.demo.project.entity.RiesgoVariable;
import com.demo.project.entity.Segmento;
import com.demo.project.entity.Variable;
import com.demo.project.repository.RiesgoRepository;
import com.demo.project.repository.RiesgoVariableRepository;
import com.demo.project.repository.SegmentoRepository;
import com.demo.project.repository.VariableRepository;

/**
 * Clase que establece todas las rutas de la api y sus funcionalidades 
 * Version 1.0
 * @author Daniel Camacho Fonseca
 *
 */

@RestController
@RequestMapping("/RiesgoVariable")
@CrossOrigin(origins = "http://localhost:4200")
public class RiesgoVariableController {
	
	@Autowired
	private RiesgoVariableRepository repository;
	
	@Autowired
	private RiesgoRepository riesgoRepository;
	
	@Autowired
	private VariableRepository variableRepository;
	
	@Autowired
	private SegmentoRepository segmentoRepository;
	
	@GetMapping("/consultarRiesgoVariable")
	public List<RiesgoVariable> ListarRiesgoVariable(){
		return repository.findAll();
	}
	
	@GetMapping("/listRiesgo")
	public List<Riesgo> ListarRiesgo() {
		return riesgoRepository.findAll();
	}
	
	@GetMapping("/listaVariable")
	public List<Variable> ListarVariable(){
		return variableRepository.findAll();
	}
	
	@GetMapping("/listaSegmento")
	public List<Segmento> ListarSegmento(){
		return segmentoRepository.findAll();
	}
	
	@PostMapping("/registrarRiesgoVariable")
	public RiesgoVariable guardarRiesgoVariable(@RequestBody RiesgoVariable riesgoVariable) {
		return repository.save(riesgoVariable);
	}
	
	
	
	
	
	
	
	

}
